@page "/login"
@using GrpcDemoService
@inject AccountService accSvc

<PageTitle>登入</PageTitle>

<h3>Login</h3>

@if (f_loading)
{
  <div class="progress">
    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%"></div>
  </div>
}

@if (errMsg != null)
{
  <div class="alert alert-danger my-3" role="alert">
    @errMsg
  </div>
}

<button class="btn btn-primary" @onclick=HandleLogin>模擬登入</button>
<button class="btn btn-primary" @onclick=HandleGetAuthState>取登入狀態</button>

<h5 class="pb-1">Authentication</h5>
@if (tokenReply != null)
{
  <table class="table">
    <tbody>
      <tr>
        <td>AccessToken</td>
        <td style="overflow-wrap:anywhere;">@tokenReply?.AccessToken</td>
      </tr>
      <tr>
        <td>ExpiresIn</td>
        <td>@tokenReply?.ExpiresIn</td>
      </tr>
    </tbody>
  </table>
}

<h5 class="pb-1">Auth State</h5>
@if (authReply != null)
{
  <table class="table">
    <tbody>
      <tr>
        <td>Auth State</td>
        <td>
          @authReply?.UserId | @authReply?.UserName | @authReply?.Roles |
          @authReply?.IssuedAtUtc?.ToDateTime().ToLocalTime() |
          @authReply?.NotBeforeUtc?.ToDateTime().ToLocalTime() |
          @authReply?.ExpiresUtc?.ToDateTime().ToLocalTime()
        </td>
      </tr>
    </tbody>
  </table>
}

@code {
  bool f_loading = false;
  string? errMsg = null;

  AuthenticationReply? tokenReply = null;
  AuthStateReply? authReply = null;

  async Task HandleLogin()
  {
    try
    {
      errMsg = null;
      f_loading = true;
      tokenReply = await accSvc.AuthenticateAsync(new AuthenticationRequest { UserName = "admin", UserPassword = "admin" });
    }
    catch (Exception ex)
    {
      errMsg = $"出現例外！{ex.Message}";
    }
    finally
    {
      f_loading = false;
    }
  }

  async Task HandleGetAuthState()
  {
    try
    {
      errMsg = null;
      f_loading = true;
      authReply = await accSvc.GetAuthStateAsync();
    }
    catch (Exception ex)
    {
      errMsg = $"出現例外！{ex.Message}";
    }
    finally
    {
      f_loading = false;
    }
  }
}